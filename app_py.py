# -*- coding: utf-8 -*-
"""App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bye9XQ9_C3edJqxZGCSOAbdY6ylPOMuP
"""

import streamlit as st

def calcular_probabilidade_bayesiana(
    prob_vitoria_a_priori,
    prob_vitoria_b_priori,
    xg_a,
    xg_b,
    lesoes,
    casa_fora,
    estilo_adversario,
    clima,
    motivacao,
    importancia_jogo
):
    pesos = {
        'lesoes': 0.1,
        'casa_fora': 0.15,
        'estilo_adversario': 0.1,
        'clima': 0.05,
        'motivacao': 0.1,
        'importancia_jogo': 0.1
    }

    def normalizar(nota):
        return max(0, min(1, nota / 10))

    if xg_a + xg_b == 0:
        evidencia_xg = 0.5
    else:
        evidencia_xg = xg_a / (xg_a + xg_b)

    evidencia_adicional = (
        pesos['lesoes'] * normalizar(lesoes) +
        pesos['casa_fora'] * normalizar(casa_fora) +
        pesos['estilo_adversario'] * normalizar(estilo_adversario) +
        pesos['clima'] * normalizar(clima) +
        pesos['motivacao'] * normalizar(motivacao) +
        pesos['importancia_jogo'] * normalizar(importancia_jogo)
    )

    evidencia_total = 0.5 * evidencia_xg + 0.5 * evidencia_adicional

    p_evidencia = evidencia_total * prob_vitoria_a_priori + (1 - evidencia_total) * prob_vitoria_b_priori

    p_vitoria_a_dado_evidencia = (evidencia_total * prob_vitoria_a_priori) / p_evidencia if p_evidencia > 0 else 0

    return round(p_vitoria_a_dado_evidencia, 4)

st.title("Previsor Bayesiano de Vitória no Futebol")

st.markdown("Preencha os campos abaixo para estimar a probabilidade de vitória do Time A.")

prob_vitoria_a_priori = st.slider("Probabilidade a priori de vitória do Time A", 0.0, 1.0, 0.5)
prob_vitoria_b_priori = st.slider("Probabilidade a priori de vitória do Time B", 0.0, 1.0, 0.3)

xg_a = st.number_input("Gols Esperados (xG) do Time A", min_value=0.0, value=1.8)
xg_b = st.number_input("Gols Esperados (xG) do Time B", min_value=0.0, value=0.9)

lesoes = st.slider("Nota para Lesões do Adversário", 0, 10, 7)
casa_fora = st.slider("Nota para Desempenho em Casa/Fora", 0, 10, 9)
estilo_adversario = st.slider("Nota para Estilo do Adversário", 0, 10, 6)
clima = st.slider("Nota para Clima", 0, 10, 5)
motivacao = st.slider("Nota para Motivação", 0, 10, 8)
importancia_jogo = st.slider("Nota para Importância do Jogo", 0, 10, 9)

if st.button("Calcular Probabilidade"):
    resultado = calcular_probabilidade_bayesiana(
        prob_vitoria_a_priori,
        prob_vitoria_b_priori,
        xg_a,
        xg_b,
        lesoes,
        casa_fora,
        estilo_adversario,
        clima,
        motivacao,
        importancia_jogo
    )
    st.success(f"Probabilidade ajustada de vitória do Time A: {resultado * 100:.2f}%")