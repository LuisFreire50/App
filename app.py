# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13ao6WZsh_PLtnh08c_ma5Lsb7Igq59GM
"""

import streamlit as st
import numpy as np
from scipy.stats import poisson

st.set_page_config(page_title="Modelo Poisson Gols", layout="centered")

st.title("‚öΩ Modelo Preditivo de Gols - Distribui√ß√£o de Poisson")

st.markdown("Insira as m√©dias de gols **marcados e sofridos** de cada equipe:")

# Entradas do usu√°rio
media_mandante_gols_feitos = st.number_input("M√©dia de gols marcados pelo time mandante", min_value=0.0, value=1.5, step=0.1)
media_mandante_gols_sofridos = st.number_input("M√©dia de gols sofridos pelo time mandante", min_value=0.0, value=1.2, step=0.1)
media_visitante_gols_feitos = st.number_input("M√©dia de gols marcados pelo time visitante", min_value=0.0, value=1.1, step=0.1)
media_visitante_gols_sofridos = st.number_input("M√©dia de gols sofridos pelo time visitante", min_value=0.0, value=1.4, step=0.1)

def calcular_probabilidades(mu_home_attack, mu_home_defense, mu_away_attack, mu_away_defense):
    lambda_mandante = (mu_home_attack + mu_away_defense) / 2
    lambda_visitante = (mu_away_attack + mu_home_defense) / 2

    max_gols = 10
    matriz_prob = np.zeros((max_gols, max_gols))
    for i in range(max_gols):
        for j in range(max_gols):
            matriz_prob[i][j] = poisson.pmf(i, lambda_mandante) * poisson.pmf(j, lambda_visitante)

    resultados = {}
    for limite in [1.5, 2.5]:
        under = sum(matriz_prob[i][j] for i in range(max_gols) for j in range(max_gols) if (i + j) <= limite)
        over = 1 - under
        resultados[f"Under {limite}"] = {'Prob': under * 100, 'Odd': round(1 / under, 2)}
        resultados[f"Over {limite}"] = {'Prob': over * 100, 'Odd': round(1 / over, 2)}
    return resultados

# C√°lculo e exibi√ß√£o
if st.button("Calcular Probabilidades"):
    resultado = calcular_probabilidades(media_mandante_gols_feitos, media_mandante_gols_sofridos,
                                        media_visitante_gols_feitos, media_visitante_gols_sofridos)

    st.subheader("üìä Resultados")
    for tipo, dados in resultado.items():
        st.write(f"**{tipo}**: {dados['Prob']:.2f}% | **Odd Justa**: {dados['Odd']}")